-- Query statements followed by their sql query

--select * from tbl_yelp_reviews limit 10;
--select * from tbl_yelp_businesses limit 10

-- Q1 find the number of businesses in each category

with cte as (
select business_id , trim(A.value) as category     -- trim because of empty spaces
from tbl_yelp_businesses, lateral split_to_table (categories, ',') as A
)
select category , count(*) as no_of_business-- count(business_id)
from cte
group by category -- group by 1
order by 2 desc -- to know which category has highest businesses in it



-- 2 Find the top 10 users who have most reviews

with cte as (
select user_id, business_id
from tbl_yelp_reviews
)
select user_id, count(*) as business_reviews
from cte
group by user_id
order by 2 desc
limit 10

-- 3 Find the top 10 users who have reviewed the  most businesses in the "restaurant" category


select r.user_id, count(distinct r.business_id)
from tbl_yelp_reviews as r
inner join tbl_yelp_businesses as b on r.business_id = b.business_id
where b.categories ilike '%restaurant%'
group by 1
order by 2 desc
limit 10  
-- User names can be obtained by joining the users json file on the output of the above query

-- 4 Find the most popular categories of businesses (based on the number of reviews)

with cte as (
select business_id , trim(A.value) as category     -- trim because of empty spaces
from tbl_yelp_businesses, lateral split_to_table (categories, ',') as A
)
select category, count(*) as no_of_reviews
from cte
inner join tbl_yelp_reviews as r on cte.business_id= r.business_id
group by 1
order by 2 desc 

-- 5 Find top 3 most recent reviews for  each business.
with cte as (
select r.*, b.name
, row_number() over (partition by r.business_id order by review_date desc) as rn
from tbl_yelp_reviews as r
inner join tbl_yelp_businesses as b on r.business_id = b.business_id
)
select * 
from cte
where rn <=3

-- Q6 Find the month with highest number of reviews

select month(review_date), count(*) as number_of_reviews
from tbl_yelp_reviews
group by 1
order by 2 desc

-- Q7 Find the percentage of 5 star reviews for each business


select b.business_id, b.name, count(*) as total_reviews, 
sum(case when r.review_stars = 5 then 1 else 0 end) as star5_reviews, star5_reviews*100/total_reviews as percentage_of_5star
from tbl_yelp_reviews as r
inner join tbl_yelp_businesses as b on r.business_id = b.business_id
group by 1,2
order by 3 desc
limit 10

-- Q8.Find the top most reviewed cities

select city, count(r.business_id)
from tbl_yelp_reviews as r
inner join tbl_yelp_businesses as b on r.business_id = b.business_id
group by city
order by 2 desc

--Q9.Find the top 5 most reviewed businesses in each city

with cte as (
select b.city, b.business_id, b.name, count(*) as total_reviews
from tbl_yelp_reviews as r
inner join tbl_yelp_businesses as b on r.business_id = b.business_id
group by 1,2,3
)
select *
from cte
qualify row_number() over (partition by city order by total_reviews desc) <= 5


-- Q10.Find the average rating of businesses which have at least 100 reviews

select b.business_id, b.name, count(*) as total_reviews, avg(review_stars) as avg_rating
from tbl_yelp_reviews as r
inner join tbl_yelp_businesses  as b on r.business_id = b.business_id
group by 1,2
having count(*) >= 100

-- Q.11 List the top 10 users who have written most reviews and the businesses they have reviewed

with cte as (select r.user_id, count(*) as total_reviews
from tbl_yelp_reviews as r
inner join tbl_yelp_businesses  as b on r.business_id = b.business_id
group by 1
order by 2
limit 10
)
select user_id, business_id
from tbl_yelp_reviews
where user_id in (select user_id from cte)
group by 1,2
order by user_id


-- Q.12 Find top 10 businesses with highest positive sentiment reviews 

select b.business_id, b.name, count(*) as total_reviews
from tbl_yelp_reviews as r
inner join tbl_yelp_businesses  as b on r.business_id = b.business_id
where sentiments = 'Positive'
group by 1,2
order by  3 desc
limit 10